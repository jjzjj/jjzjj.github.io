<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>Hexo</title>
  
  <subtitle>Hexo</subtitle>
  <link href="https://jjzjj.github.io/atom.xml" rel="self"/>
  
  <link href="https://jjzjj.github.io/"/>
  <updated>2022-06-30T08:20:34.376Z</updated>
  <id>https://jjzjj.github.io/</id>
  
  <author>
    <name>It&#39;s Me!</name>
    
  </author>
  
  <generator uri="https://hexo.io/">Hexo</generator>
  
  <entry>
    <title>在openwrt软路由自定义openvpn配置文件</title>
    <link href="https://jjzjj.github.io/2022/06/30/openvpn-config-custom-in-openwrt/"/>
    <id>https://jjzjj.github.io/2022/06/30/openvpn-config-custom-in-openwrt/</id>
    <published>2022-06-30T07:23:02.000Z</published>
    <updated>2022-06-30T08:20:34.376Z</updated>
    
    <content type="html"><![CDATA[<blockquote><p>官方的openwrt原版固件里面可以直接上传openvpn配置文件，但是我在第三方的固件里面没看到有这个功能，只能手动输入openvpn的配置，但是我不管怎么输，老出错没有成功的。后面我就直接将配置文件上传到openwrt里面调用，就可以了，ui界面原理上也是这样调用。</p></blockquote><h1 id="一键脚本搭建OpenVPN服务端"><a href="#一键脚本搭建OpenVPN服务端" class="headerlink" title="一键脚本搭建OpenVPN服务端"></a>一键脚本搭建OpenVPN服务端</h1><h2 id="方法一：Nyr-x2F-openvpn-install"><a href="#方法一：Nyr-x2F-openvpn-install" class="headerlink" title="方法一：Nyr&#x2F;openvpn-install"></a>方法一：<a href="https://github.com/Nyr/openvpn-install.git">Nyr&#x2F;openvpn-install</a></h2><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">wget https://git.io/vpn -O openvpn-install.sh &amp;&amp; bash openvpn-install.sh</span><br></pre></td></tr></table></figure><h2 id="方法二：angristan-x2F-openvpn-install"><a href="#方法二：angristan-x2F-openvpn-install" class="headerlink" title="方法二：angristan&#x2F;openvpn-install"></a>方法二：<a href="https://github.com/angristan/openvpn-install.git">angristan&#x2F;openvpn-install</a></h2><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">curl -O https://raw.githubusercontent.com/angristan/openvpn-install/master/openvpn-install.sh</span><br><span class="line"><span class="built_in">chmod</span> +x openvpn-install.sh</span><br><span class="line">./openvpn-install.sh</span><br></pre></td></tr></table></figure><p>生成的.ovpn后缀的配置文件放在当前用户文件夹，文件里面带有证书<br><code>cat /root/name.vpn</code></p><h1 id="OpenWrt配置"><a href="#OpenWrt配置" class="headerlink" title="OpenWrt配置"></a>OpenWrt配置</h1><h2 id="上传ovpn文件到软路由"><a href="#上传ovpn文件到软路由" class="headerlink" title="上传ovpn文件到软路由"></a>上传ovpn文件到软路由</h2><p>写入ovpn配置文件信息</p><figure class="highlight plaintext"><figcaption><span>name.ovpn</span></figcaption><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">vim /etc/config/name.ovpn&#x27;</span><br></pre></td></tr></table></figure><h2 id="修改OpenVPN客户端插件配置"><a href="#修改OpenVPN客户端插件配置" class="headerlink" title="修改OpenVPN客户端插件配置"></a>修改OpenVPN客户端插件配置</h2><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">vim /etc/config/openvpn</span><br></pre></td></tr></table></figure><h2 id="新建VPN节点"><a href="#新建VPN节点" class="headerlink" title="新建VPN节点"></a>新建VPN节点</h2><figure class="highlight plaintext"><figcaption><span>openvpn</span></figcaption><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">config openvpn openvpnclient</span><br><span class="line">    option enabled &#x27;1&#x27;</span><br><span class="line">    option config &#x27;/etc/config/name.ovpn&#x27;</span><br></pre></td></tr></table></figure><h2 id="重启服务"><a href="#重启服务" class="headerlink" title="重启服务"></a>重启服务</h2><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">/etc/init.d/openvpn restart</span><br></pre></td></tr></table></figure><h2 id="查看服务状态"><a href="#查看服务状态" class="headerlink" title="查看服务状态"></a>查看服务状态</h2><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">/etc/init.d/openvpn status</span><br></pre></td></tr></table></figure><h2 id="也可以手动加载配置文件，这应该是一次性的"><a href="#也可以手动加载配置文件，这应该是一次性的" class="headerlink" title="也可以手动加载配置文件，这应该是一次性的"></a>也可以手动加载配置文件，这应该是一次性的</h2><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">openvpn --config /etc/config/name.ovpn</span><br></pre></td></tr></table></figure>]]></content>
    
    
      
      
    <summary type="html">&lt;blockquote&gt;&lt;p&gt;官方的openwrt原版固件里面可以直接上传openvpn配置文件，但是我在第三方的固件里面没看到有这个功能，只能手动输入openvpn的配置，但是我不管怎么输，老出错没有成功的。后面我就直接将配置文件上传到openwrt里面调用，就可以了，ui界面</summary>
      
    
    
    
    <category term="OpenVPN" scheme="https://jjzjj.github.io/categories/OpenVPN/"/>
    
    <category term="OpenWrt" scheme="https://jjzjj.github.io/categories/OpenVPN/OpenWrt/"/>
    
    
    <category term="OpenVPN" scheme="https://jjzjj.github.io/tags/OpenVPN/"/>
    
    <category term="OpenWrt" scheme="https://jjzjj.github.io/tags/OpenWrt/"/>
    
  </entry>
  
  <entry>
    <title>使用Hexo+Github+Next主题搭建个人博客</title>
    <link href="https://jjzjj.github.io/2022/06/30/post-my-first-hexo-page/"/>
    <id>https://jjzjj.github.io/2022/06/30/post-my-first-hexo-page/</id>
    <published>2022-06-30T01:18:44.000Z</published>
    <updated>2022-06-30T08:19:12.322Z</updated>
    
    <content type="html"><![CDATA[<blockquote><p>折腾了小半天，总算把简洁的个人博客搭建成功了，一直都想弄一个博客啥的来记录下平时积累的东西，写在txt文本、word离线的容易丢，后面用OneNote记录也蛮方便，移动端有时候要查也行，还支持OCR图片查询，但是折腾排版格式个人觉得很麻烦，搭了很多次wp，搭完进去一看到写东西的界面排版花里胡哨，又不写了，最后还是写在了csdn，结果上次简单写了几句openvpn的命令，审核不过被删了。大多时候还是简单新建一个文本文档记录下，过后就转移到OneNote。在网上查资料的时候，发现Hexo框架+Next主题搭的个人博客网站非常符合自己的需求，界面简洁，使用md语法写在文本上，最后git一提交，而且数据存在本地，又可以在github弄一个项目，又免去了另外购置vps主机和域名。如果不想用xxxx.github.io的域名，也可以替换一个自己购买申请的域名。第一篇就记录下如何以Hexo+Github+Next来搭建的。</p></blockquote><h1 id="搭建Hexo-Next网站"><a href="#搭建Hexo-Next网站" class="headerlink" title="搭建Hexo+Next网站"></a>搭建Hexo+Next网站</h1><p>Hexo 是一个快速、简洁且高效的博客框架。Hexo 使用 Markdown（或其他渲染引擎）解析文章，在几秒内，即可利用靓丽的主题生成静态网页。<br><a href="https://hexo.io/zh-cn/docs/index.html">Hexo 中文官方文档</a><br><a href="https://theme-next.iissnan.com/getting-started.html">Next 中文官方文档</a></p><blockquote><p>如果要搭建的话，还是花几小时从头到尾把官方文档看一遍比较好，首先这些文档比较少，内容也很简单，边实践边摸索，比一上来就搜各种教程要更加有效率。</p></blockquote><span id="more"></span> <h2 id="安装Hexo"><a href="#安装Hexo" class="headerlink" title="安装Hexo"></a>安装Hexo</h2><p>安装前提：<br><a href="http://nodejs.org/">Node.js</a> (Node.js 版本需不低于 10.13，建议使用 Node.js 12.0 及以上版本)<br><a href="http://git-scm.com/">Git</a><br>所有必备的应用程序安装完成后，即可使用 npm 安装 Hexo。</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">npm install -g hexo-cli</span><br></pre></td></tr></table></figure><p>等安装完成，输入<code>hexo -v</code>能查看版本说明安装成功<br>新建网站目录文件夹并安装模块</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">mkdir</span> hexo.github.io</span><br><span class="line"><span class="built_in">cd</span> hexo.github.io</span><br><span class="line">hexo init myweb</span><br><span class="line"><span class="built_in">cd</span> myweb</span><br><span class="line">npm install</span><br></pre></td></tr></table></figure><p>对网站的基本配置，可以查阅<a href="https://hexo.io/zh-cn/docs/configuration">Hexo 中文官方配置文档</a></p><figure class="highlight plaintext"><figcaption><span>_config.yml</span></figcaption><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">title: Hexo</span><br><span class="line">subtitle: &#x27;Hexo&#x27;</span><br><span class="line">description: &#x27;Welcome To My Blog&#x27;</span><br><span class="line">keywords:</span><br><span class="line">author: It&#x27;s Me!</span><br><span class="line">language: zh-CN</span><br><span class="line">timezone: &#x27;Asia/Shanghai&#x27;</span><br></pre></td></tr></table></figure><h2 id="安装Next"><a href="#安装Next" class="headerlink" title="安装Next"></a>安装Next</h2><p>不要用官方文档里面用那个v5.1.4版的，会出现兼容问题打不开网站，去 <a href="https://github.com/theme-next/hexo-theme-next/releases">https://github.com/theme-next/hexo-theme-next/releases</a> 下载v7.8.0版本，解压所下载的压缩包至站点的 themes 目录下，并将解压后的文件夹名称更改为 next。<br>找到 theme 字段，并将其值更改为 next。</p><figure class="highlight plaintext"><figcaption><span>_config.yml</span></figcaption><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">theme: next</span><br></pre></td></tr></table></figure><p>找到 theme&#x2F;next&#x2F;source&#x2F;_config.yml 修改 language</p><figure class="highlight plaintext"><figcaption><span>_config.yml</span></figcaption><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">language: zh-CN</span><br></pre></td></tr></table></figure><p>找到 theme&#x2F;next&#x2F;source&#x2F;_config.yml 修改 menu</p><figure class="highlight plaintext"><figcaption><span>_config.yml</span></figcaption><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">menu:</span><br><span class="line">  home: /</span><br><span class="line">  archives: /archives</span><br><span class="line">  #about: /about</span><br><span class="line">  categories: /categories</span><br><span class="line">  tags: /tags</span><br><span class="line">  #commonweal: /404.html</span><br></pre></td></tr></table></figure><h2 id="本地调试"><a href="#本地调试" class="headerlink" title="本地调试"></a>本地调试</h2><p>新建一篇文章。如果没有设置 layout 的话，默认使用 _config.yml 中的 default_layout 参数代替。如果标题包含空格的话，请使用引号括起来。</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">hexo new <span class="string">&quot;post title with whitespace&quot;</span></span><br></pre></td></tr></table></figure><p>生成静态文件</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">hexo generate</span><br></pre></td></tr></table></figure><p>启动服务器。默认情况下，访问网址为： <a href="http://localhost:4000/">http://localhost:4000/</a></p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">hexo server</span><br></pre></td></tr></table></figure><h1 id="Github"><a href="#Github" class="headerlink" title="Github"></a>Github</h1><h2 id="注册Github账号"><a href="#注册Github账号" class="headerlink" title="注册Github账号"></a>注册Github账号</h2><p><a href="https://github.com/">GitHub网址</a></p><h2 id="申请Token"><a href="#申请Token" class="headerlink" title="申请Token"></a>申请Token</h2><p><a href="https://github.com/settings/tokens">申请Token地址</a> - Generate new token</p><img src="/2022/06/30/post-my-first-hexo-page/2.png" class="" title="申请Github Token"><h2 id="新建repository"><a href="#新建repository" class="headerlink" title="新建repository"></a>新建repository</h2><p><a href="https://github.com/new">点击前往</a></p><img src="/2022/06/30/post-my-first-hexo-page/3.png" class="" title="新建repository"><h2 id="安装hexo-deployer-git"><a href="#安装hexo-deployer-git" class="headerlink" title="安装hexo-deployer-git"></a>安装hexo-deployer-git</h2><p><a href="https://github.com/hexojs/hexo-deployer-git">安装hexo-deployer-git</a></p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">npm install hexo-deployer-git --save</span><br></pre></td></tr></table></figure><p>在 _config.yml（如果有已存在的请删除）添加如下配置：</p><figure class="highlight plaintext"><figcaption><span>_config.yml</span></figcaption><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">deploy:</span><br><span class="line">  type: git</span><br><span class="line">  repo: https://github.com/&lt;username&gt;/&lt;project&gt;</span><br><span class="line">  # example, https://github.com/yourgithubname/yourgithubname.github.io.git</span><br><span class="line">  branch: main</span><br></pre></td></tr></table></figure><h2 id="部署发布网站"><a href="#部署发布网站" class="headerlink" title="部署发布网站"></a>部署发布网站</h2><h3 id="初始化本地仓库"><a href="#初始化本地仓库" class="headerlink" title="初始化本地仓库"></a>初始化本地仓库</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">git init</span><br></pre></td></tr></table></figure><h3 id="连接远程仓库"><a href="#连接远程仓库" class="headerlink" title="连接远程仓库"></a>连接远程仓库</h3><p>如果是第一次使用git，在使用git的时候会提示输入用户名和密码，用户名是自己的注册邮箱，密码是申请的Token</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">git remote add origin https://github.com/yourgithubname/yourgithubname.github.io.git</span><br></pre></td></tr></table></figure><h3 id="发布Hexo到Github-Page部署网站"><a href="#发布Hexo到Github-Page部署网站" class="headerlink" title="发布Hexo到Github Page部署网站"></a>发布Hexo到Github Page部署网站</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">hexo clean &amp;&amp; hexo g &amp;&amp; hexo d</span><br></pre></td></tr></table></figure><img src="/2022/06/30/post-my-first-hexo-page/4.png" class="" title="发布部署网站"><h3 id="访问网站测试"><a href="#访问网站测试" class="headerlink" title="访问网站测试"></a>访问网站测试</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">https://yourgithubname.github.io</span><br></pre></td></tr></table></figure>]]></content>
    
    
    <summary type="html">&lt;blockquote&gt;&lt;p&gt;折腾了小半天，总算把简洁的个人博客搭建成功了，一直都想弄一个博客啥的来记录下平时积累的东西，写在txt文本、word离线的容易丢，后面用OneNote记录也蛮方便，移动端有时候要查也行，还支持OCR图片查询，但是折腾排版格式个人觉得很麻烦，搭了很多次wp，搭完进去一看到写东西的界面排版花里胡哨，又不写了，最后还是写在了csdn，结果上次简单写了几句openvpn的命令，审核不过被删了。大多时候还是简单新建一个文本文档记录下，过后就转移到OneNote。在网上查资料的时候，发现Hexo框架+Next主题搭的个人博客网站非常符合自己的需求，界面简洁，使用md语法写在文本上，最后git一提交，而且数据存在本地，又可以在github弄一个项目，又免去了另外购置vps主机和域名。如果不想用xxxx.github.io的域名，也可以替换一个自己购买申请的域名。第一篇就记录下如何以Hexo+Github+Next来搭建的。&lt;/p&gt;
&lt;/blockquote&gt;

&lt;h1 id=&quot;搭建Hexo-Next网站&quot;&gt;&lt;a href=&quot;#搭建Hexo-Next网站&quot; class=&quot;headerlink&quot; title=&quot;搭建Hexo+Next网站&quot;&gt;&lt;/a&gt;搭建Hexo+Next网站&lt;/h1&gt;&lt;p&gt;Hexo 是一个快速、简洁且高效的博客框架。Hexo 使用 Markdown（或其他渲染引擎）解析文章，在几秒内，即可利用靓丽的主题生成静态网页。&lt;br&gt;&lt;a href=&quot;https://hexo.io/zh-cn/docs/index.html&quot;&gt;Hexo 中文官方文档&lt;/a&gt;&lt;br&gt;&lt;a href=&quot;https://theme-next.iissnan.com/getting-started.html&quot;&gt;Next 中文官方文档&lt;/a&gt;&lt;/p&gt;
&lt;blockquote&gt;&lt;p&gt;如果要搭建的话，还是花几小时从头到尾把官方文档看一遍比较好，首先这些文档比较少，内容也很简单，边实践边摸索，比一上来就搜各种教程要更加有效率。&lt;/p&gt;
&lt;/blockquote&gt;</summary>
    
    
    
    
    <category term="建站" scheme="https://jjzjj.github.io/tags/%E5%BB%BA%E7%AB%99/"/>
    
    <category term="Hexo" scheme="https://jjzjj.github.io/tags/Hexo/"/>
    
    <category term="Next" scheme="https://jjzjj.github.io/tags/Next/"/>
    
    <category term="Github" scheme="https://jjzjj.github.io/tags/Github/"/>
    
  </entry>
  
</feed>
